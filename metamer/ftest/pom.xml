<?xml version="1.0" encoding="UTF-8"?>

<!-- JBoss, Home of Professional Open Source Copyright 2010-2012, Red Hat, Inc. and individual contributors by the @authors tag.
    See the copyright.txt in the distribution for a full listing of individual contributors. This is free software; you can redistribute
    it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version. This software is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
    General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this
    software; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the
    FSF site: http://www.fsf.org. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.richfaces.tests</groupId>
        <artifactId>metamer-root</artifactId>
        <version>4.2.2.20120528-Final</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>metamer-ftest</artifactId>
    <name>RichFaces Metamer Ftest</name>

    <properties>

        <templates>plain</templates>

        <testng.listeners>org.richfaces.tests.metamer.ftest.MatrixConfigurator,org.richfaces.tests.metamer.ftest.MetamerSeleniumLoggingTestListener,org.richfaces.tests.metamer.ftest.MetamerFailureLoggingTestListener,org.richfaces.tests.metamer.ftest.MetamerConsoleStatusTestListener</testng.listeners>
        <testng.suite.xml>src/test/resources/testng/testng.xml</testng.suite.xml>

        <jvm.args.jacoco>-Djacoco.disabled=true</jvm.args.jacoco>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>metamer</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
        </dependency>
        <!-- Arquillian dependencies -->
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>arquillian-graphene</artifactId>
            <version>${arquillian.graphene-testng.version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Resolution of JAR libraries into WAR archive -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl</artifactId>
        </dependency>
        <!-- Support for Selenium in Arquillian Drone -->
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-drone-webdriver</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Selenium -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-support</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-server</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>commons-codec</groupId>
                    <artifactId>commons-codec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- TestNG listeners for better console output -->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>testng-listeners</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- XHRHalter support -->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>xhrhalter</artifactId>
            <scope>test</scope>
            <version>${project.version}</version>
        </dependency>
        <!-- WebDriver Utils -->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>webdriver-utils</artifactId>
            <scope>test</scope>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver</artifactId>
            <scope>test</scope>
            <type>pom</type>
        </dependency>
        <!-- see the https://community.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode -->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <version>3.0.0.Final</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <suiteXmlFiles>
                        <suiteXmlFiles>${testng.suite.xml}</suiteXmlFiles>
                    </suiteXmlFiles>
                    <!-- Logging configuration for Selenium , templates -->
                    <argLine>-Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
                        -Dtemplates='${templates}'</argLine>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>${testng.listeners}</value>
                        </property>
                    </properties>
                    <systemPropertyVariables>
                        <jvm.args.jacoco>${jvm.args.jacoco}</jvm.args.jacoco>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-installed</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.richfaces.tests</groupId>
                                    <artifactId>metamer</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>${metamer.classifier}</classifier>
                                    <type>war</type>
                                    <destFileName>metamer.war</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <overWriteIfNewer>false</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>jbossas-managed-6</id>
            <properties>
                <metamer.classifier>jee6</metamer.classifier>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-jbossas-managed-6</artifactId>
                    <version>${arquillian.jboss-as6.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.jbossas</groupId>
                    <artifactId>jboss-as-client</artifactId>
                    <version>${version.jbossas6}</version>
                    <type>pom</type>
                </dependency>
                <dependency>
                    <groupId>org.richfaces.tests</groupId>
                    <artifactId>metamer</artifactId>
                    <version>${project.version}</version>
                    <classifier>classes</classifier>
                    <exclusions>
                        <exclusion>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-log4j12</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jboss.jbossas</groupId>
                                            <artifactId>jboss-as-distribution</artifactId>
                                            <version>${version.jbossas6}</version>
                                            <type>zip</type>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <arquillian.launch>jbossas-managed-6</arquillian.launch>
                            </systemProperties>
                            <environmentVariables>
                                <JBOSS_HOME>${jboss6Home}</JBOSS_HOME>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>code-coverage</id>
            <activation>
                <property>
                    <name>coverage</name>
                </property>
            </activation>
            <properties>
                <jvm.args.jacoco>-javaagent:${project.build.directory}/jacoco-jars/agent/jacocoagent.jar=destfile=${project.build.directory}/jacoco.exec,includes=*,append=true,output=file</jvm.args.jacoco>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <jvm.args.jacoco>${jvm.args.jacoco}</jvm.args.jacoco>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jacoco-prepare</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <append>true</append>
                                    <destFile>target/jacoco.exec</destFile>
                                    <includes>
                                        <include>*</include>
                                    </includes>
                                    <output>file</output>
                                    <propertyName>jvm.args.jacoco</propertyName>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                           <!-- Copy the ant tasks jar. Needed for ts.jacoco.report-ant . -->
                            <execution>
                                <id>jacoco-dependency-ant</id>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jacoco</groupId>
                                            <artifactId>org.jacoco.ant</artifactId>
                                            <version>${version.jacoco.plugin}</version>
                                        </artifactItem>
                                    </artifactItems>
                                    <stripVersion>true</stripVersion>
                                    <outputDirectory>${basedir}/target/jacoco-jars</outputDirectory>
                                </configuration>
                            </execution>
                            <!-- Copy the agent jar. Needed for ${jvm.args.jacoco} to have this jar on known path. If the ts.jacoco-prepare worked and really put the value into the property, this might go away. -->
                            <execution>
                                <id>jacoco-dependency-agent</id>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <phase>process-test-resources</phase>
                                <inherited>false</inherited>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jacoco</groupId>
                                            <artifactId>org.jacoco.agent</artifactId>
                                            <version>${version.jacoco.plugin}</version>
                                        </artifactItem>
                                    </artifactItems>
                                    <stripVersion>true</stripVersion>
                                    <outputDirectory>${basedir}/target/jacoco-jars/agent</outputDirectory>
                                </configuration>
                            </execution>
                            <!-- Richfaces sources -->
                            <execution>
                                <id>richfaces-sources-unpack</id>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>unpack</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.richfaces.core</groupId>
                                            <artifactId>richfaces-core-api</artifactId>
                                            <version>${version.richfaces}</version>
                                            <classifier>sources</classifier>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/sources/richfaces-core-api</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.richfaces.core</groupId>
                                            <artifactId>richfaces-core-impl</artifactId>
                                            <version>${version.richfaces}</version>
                                            <classifier>sources</classifier>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/sources/richfaces-core-impl</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.richfaces.ui</groupId>
                                            <artifactId>richfaces-components-api</artifactId>
                                            <version>${version.richfaces}</version>
                                            <classifier>sources</classifier>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/sources/richfaces-components-api</outputDirectory>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.richfaces.ui</groupId>
                                            <artifactId>richfaces-components-ui</artifactId>
                                            <version>${version.richfaces}</version>
                                            <classifier>sources</classifier>
                                            <overWrite>false</overWrite>
                                            <outputDirectory>${project.build.directory}/sources/richfaces-components-ui</outputDirectory>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                   <!-- Ant plugin. -->
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <!-- Prepare Metamer -->
                            <execution>
                                <id>jacoco-metamer</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <unzip src="${project.build.directory}/metamer.war" dest="${project.build.directory}/metamer-war-unzipped" overwrite="true" />
                                    </tasks>
                                </configuration>
                            </execution>
                            <!-- DEBUG -->
                            <execution>
                                <id>jacoco-debug</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <target>
                                        <echo>Jacoco argline: ${jvm.args.jacoco}</echo>
                                        <echo>Jacoco jar: ${basedir}/target/jacoco-jars/org.jacoco.ant.jar</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <!-- Must be run using Ant due to https://sourceforge.net/tracker/?func=detail&aid=3474708&group_id=177969&atid=883354 -->
                            <execution>
                                <id>jacoco-report-ant</id>
                                <phase>post-integration-test</phase> <!-- post-integration-test -->
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <inherited>false</inherited>
                                <configuration>
                                    <target>
                                        <taskdef name="report" classname="org.jacoco.ant.ReportTask">
                                            <classpath path="${basedir}/target/jacoco-jars/org.jacoco.ant.jar" />
                                        </taskdef>
                                        <echo>Creating JaCoCo test coverage reports...</echo>
                                        <mkdir dir="${basedir}/target/coverage-report" />
                                        <report>
                                            <executiondata>
                                                <fileset dir="${basedir}">
                                                    <include name="**/target/jacoco.exec" />
                                                </fileset>
                                            </executiondata>
                                            <structure name="RichFaces Project">
                                                <group name="RichFaces Core API">
                                                    <classfiles>
                                                        <fileset dir="${project.build.directory}/metamer-war-unzipped/WEB-INF/lib">
                                                            <include name="richfaces-core-api*" />
                                                        </fileset>
                                                    </classfiles>
                                                    <sourcefiles encoding="UTF-8">
                                                        <fileset dir="${project.build.directory}/sources/richfaces-core-api" />
                                                    </sourcefiles>
                                                </group>
                                                <group name="RichFaces Core Implementation">
                                                    <classfiles>
                                                        <fileset dir="${project.build.directory}/metamer-war-unzipped/WEB-INF/lib">
                                                            <include name="richfaces-core-impl*" />
                                                        </fileset>
                                                    </classfiles>
                                                    <sourcefiles encoding="UTF-8">
                                                        <fileset dir="${project.build.directory}/sources/richfaces-core-impl" />
                                                    </sourcefiles>
                                                </group>
                                                <group name="RichFaces Components API">
                                                    <classfiles>
                                                        <fileset dir="${project.build.directory}/metamer-war-unzipped/WEB-INF/lib">
                                                            <include name="richfaces-components-api*" />
                                                        </fileset>
                                                    </classfiles>
                                                    <sourcefiles encoding="UTF-8">
                                                        <fileset dir="${project.build.directory}/sources/richfaces-components-api" />
                                                    </sourcefiles>
                                                </group>
                                                <group name="RichFaces Components UI">
                                                    <classfiles>
                                                        <fileset dir="${project.build.directory}/metamer-war-unzipped/WEB-INF/lib">
                                                            <include name="richfaces-components-ui*" />
                                                        </fileset>
                                                    </classfiles>
                                                    <sourcefiles encoding="UTF-8">
                                                        <fileset dir="${project.build.directory}/sources/richfaces-components-ui" />
                                                    </sourcefiles>
                                                </group>
                                            </structure>
                                            <html destdir="${basedir}/target/coverage-report/html" />
                                            <xml destfile="${basedir}/target/coverage-report/coverage-report.xml" />
                                            <csv destfile="${basedir}/target/coverage-report/coverage-report.csv" />
                                        </report>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.jacoco</groupId>
                                <artifactId>org.jacoco.ant</artifactId>
                                <version>${version.jacoco.plugin}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
