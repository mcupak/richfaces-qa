<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:a4j="http://richfaces.org/a4j"
      xmlns:rich="http://richfaces.org/rich"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:metamer="http://java.sun.com/jsf/composite/metamer">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2012, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">

        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>
        
        <ui:define name="head">
            <script type="text/javascript">
                    function add(element) {
                        element.innerHTML = 1 + parseInt(element.innerHTML);
                    }
            </script>
        </ui:define>

        <ui:define name="component">
        
           <h2>4.1.0.final javascript error : element is null, ajax queue operation</h2>
           <p>Steps to reproduce from JIRA:
               <ol>                  
                  <li>1. click button send first ajax request to server, don't response it.</li>
                  <li>2. click the button in your render area, the button will disappear when the response arrived.</li>
                  <li>3. the first response arrived.</li>
               </ol>
           </p>
        
           <h:form id="form">
                <h:panelGrid columns="2">
                    <h:outputText value="Type here:" />
                    <h:inputText id="input1" value="#{a4jQueueBean.text}" onkeypress="add(#{rich:element('events1')}); #{rich:element('timeWatcher:grid')}.event(); "
                                 disabled="#{not (facesContext.maximumSeverity==null)}">
                        <a4j:ajax event="keypress" onbegin="add(#{rich:element('requests')}); #{rich:element('timeWatcher:grid')}.begin(); " render="outtext" oncomplete="#{rich:element('timeWatcher:grid')}.complete(); #{rich:element('timeWatcher:grid')}.difference(); "
                                  onbeforedomupdate="add(#{rich:element('updates')});"/>
                    </h:inputText> 

                    <!-- this kind of action button is not necessary for issue simulation -->
                    <!-- h:outputText value="JSF commandButton:" />
                    <h:commandButton id="actionButton1" value="Action 1" action="#{richBean.dummyAction}"
                                     onclick="add(#{rich:element('events1')}); #{rich:element('timeWatcher:grid')}.event();">
                        <a4j:ajax onbegin="add(#{rich:element('requests')}); #{rich:element('timeWatcher:grid')}.begin(); "
                                  oncomplete="#{rich:element('timeWatcher:grid')}.complete(); #{rich:element('timeWatcher:grid')}.difference(); "
                                  onbeforedomupdate="add(#{rich:element('updates')});" />
                    </h:commandButton-->
                    
                    <h:outputText value="Ajax commandButton:" />
                    <a4j:commandButton id="ajaxAction1" value="Ajax Action with delay:" action="#{richBean.dummyActionWithDelay}"
                                       onclick="add(#{rich:element('events1')}); #{rich:element('timeWatcher:grid')}.event();"
                                       onbegin="add(#{rich:element('requests')}); #{rich:element('timeWatcher:grid')}.begin(); "
                                       oncomplete="#{rich:element('timeWatcher:grid')}.complete(); #{rich:element('timeWatcher:grid')}.difference(); "
                                       onbeforedomupdate="add(#{rich:element('updates')});"
                    />
                    
                    <h:outputText value="Ajax commandButton:" />
                    <a4j:commandButton id="ajaxAction2" value="Ajax Action 2:" action="#{richBean.dummyAction}"
                                       onclick="add(#{rich:element('events1')}); #{rich:element('timeWatcher:grid')}.event();"
                                   	   onbegin="add(#{rich:element('requests')}); #{rich:element('timeWatcher:grid')}.begin(); "
                                       oncomplete="#{rich:element('timeWatcher:grid')}.complete(); #{rich:element('timeWatcher:grid')}.difference(); "
                                       onbeforedomupdate="add(#{rich:element('updates')});"
                    />
                    
                    <!-- h:outputText value="Click here (with error):" />
                    <a4j:commandButton id="errorButton" value="Action" action="#{richBean.causeError}"/-->

                    <h:outputText value="Repeated text:" />
                    <h:outputText value="#{a4jQueueBean.text}" id="outtext" style="font-weight:bold;" />
                    <h:outputText value="Events count:" />
                    <h:outputText value="0" id="events1" />
                    <h:outputText value="Requests count:" />
                    <h:outputText value="0" id="requests" />
                    <h:outputText value="DOM updates count:" />
                    <h:outputText value="0" id="updates" />

                </h:panelGrid>

                <metamer:clientTimeWatcher id="timeWatcher" />

            </h:form>  
        </ui:define>

        <ui:define name="outOfTemplateAfter">
            <h:panelGrid columns="2">
                    <h:outputLabel for="introduceDelay" value="Introduce Delay:" />
                    <h:selectBooleanCheckbox id="introduceDelay" value="#{a4jQueueBean.introduceDelay}">
                        <a4j:ajax event="change" />
                    </h:selectBooleanCheckbox>
            </h:panelGrid>
                
            <metamer:attributes value="#{a4jQueueBean.attributes}" id="attributes" />
        </ui:define>

    </ui:composition>
</html>